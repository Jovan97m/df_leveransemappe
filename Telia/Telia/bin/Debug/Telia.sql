/*
Deployment script for Telia

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Telia"
:setvar DefaultFilePrefix "Telia"
:setvar DefaultDataPath "C:\Users\JOVAN\AppData\Local\Microsoft\VisualStudio\SSDT\Telia"
:setvar DefaultLogPath "C:\Users\JOVAN\AppData\Local\Microsoft\VisualStudio\SSDT\Telia"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Rename refactoring operation with key 3612fca1-4f17-4b39-b934-d88c654b39d1 is skipped, element [dbo].[Nummer].[11. Katalogoppforing] (SqlSimpleColumn) will not be renamed to Katalogoppforing';


GO
PRINT N'Rename refactoring operation with key c2f7a30c-baad-407f-8bd7-7b012d77f648 is skipped, element [dbo].[Nummer].[13. Porteringsdatoog tid] (SqlSimpleColumn) will not be renamed to Porteringsdatoog tid';


GO
PRINT N'Rename refactoring operation with key b197c2cd-7dba-4677-b31a-6305baa47e1e is skipped, element [dbo].[Nummer].[DeliveryContract] (SqlSimpleColumn) will not be renamed to DeliveryContractCountryCode';


GO
PRINT N'Rename refactoring operation with key 75ddc9fd-fe11-4032-bb4a-b135747e2507 is skipped, element [dbo].[Postnummer].[Id] (SqlSimpleColumn) will not be renamed to ID';


GO
PRINT N'Creating Table [dbo].[Abonementype]...';


GO
CREATE TABLE [dbo].[Abonementype] (
    [Id]       INT           IDENTITY (1, 1) NOT NULL,
    [Name]     NVARCHAR (25) NULL,
    [Num_type] CHAR (1)      NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Admin]...';


GO
CREATE TABLE [dbo].[Admin] (
    [Id]       INT           IDENTITY (1, 1) NOT NULL,
    [UserName] NVARCHAR (50) NOT NULL,
    [Password] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Client]...';


GO
CREATE TABLE [dbo].[Client] (
    [Id]                  INT           IDENTITY (1, 1) NOT NULL,
    [Orgnummer]           NVARCHAR (50) NOT NULL,
    [Password]            NVARCHAR (50) NOT NULL,
    [FirmaNavn]           NVARCHAR (50) NULL,
    [GateNavn]            NVARCHAR (50) NULL,
    [HusNummer]           INT           NULL,
    [HusBokStav]          NVARCHAR (20) NULL,
    [PostNummer]          INT           NULL,
    [Sted]                NVARCHAR (50) NULL,
    [Epost]               NVARCHAR (20) NULL,
    [KontaktNavn]         NVARCHAR (30) NULL,
    [KontaktEpost]        NVARCHAR (20) NULL,
    [KontaktTlfnr]        NVARCHAR (30) NULL,
    [TekniskKontaktNavn]  NVARCHAR (20) NULL,
    [TekniskKontaktEpost] NVARCHAR (30) NULL,
    [TekniskKontaktTlfnr] NVARCHAR (30) NULL,
    [Id_abonementype]     INT           NOT NULL,
    [Id_abonemetypeF]     INT           NOT NULL,
    [Id_abonementypeI]    INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[ConnectionType]...';


GO
CREATE TABLE [dbo].[ConnectionType] (
    [Id]      INT IDENTITY (1, 1) NOT NULL,
    [Id_abom] INT NOT NULL,
    [Id_type] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Fakturaoppsett]...';


GO
CREATE TABLE [dbo].[Fakturaoppsett] (
    [NavnPaKostnadssted]       NVARCHAR (50)  NOT NULL,
    [Tileggsinfo kostnadssted] NVARCHAR (200) NULL,
    [Fakturaformat]            NVARCHAR (50)  NULL,
    [Fakturaadresse]           NVARCHAR (50)  NULL,
    [Husnr]                    INT            NULL,
    [Bokstav]                  NVARCHAR (200) NULL,
    [Postnummer]               INT            NULL,
    [Sted]                     NVARCHAR (50)  NULL,
    [Epost]                    NVARCHAR (50)  NULL,
    [Kostnadssted]             NVARCHAR (50)  NOT NULL,
    [Orgnummer]                NVARCHAR (50)  NULL,
    [Date]                     DATE           NULL,
    [Id_client]                INT            NULL,
    PRIMARY KEY CLUSTERED ([Kostnadssted] ASC)
);


GO
PRINT N'Creating Table [dbo].[Nummer]...';


GO
CREATE TABLE [dbo].[Nummer] (
    [Id]                              INT           IDENTITY (1, 1) NOT NULL,
    [Telefonnummer]                   NVARCHAR (20) NULL,
    [Abonnementstype]                 NVARCHAR (50) NULL,
    [Fornavn]                         NVARCHAR (50) NULL,
    [Etternavn]                       NVARCHAR (50) NULL,
    [Bedrift som skal faktureres]     NVARCHAR (50) NULL,
    [c/o adresse for SIM levering]    NVARCHAR (50) NULL,
    [Gateadresse SIM Skal sendes til] NVARCHAR (50) NULL,
    [Hus nummer]                      INT           NULL,
    [Hus bokstav]                     NVARCHAR (50) NULL,
    [post nr.]                        INT           NULL,
    [Post sted]                       NVARCHAR (50) NULL,
    [Epost for sporings informasjon]  NVARCHAR (50) NULL,
    [Epost]                           NVARCHAR (50) NULL,
    [Kostnadsted]                     NVARCHAR (50) NULL,
    [Tilleggsinfo/ansatt ID]          INT           NULL,
    [Ekstra talesim ]                 INT           NULL,
    [Ekstra datasim]                  INT           NULL,
    [Orgnummer]                       NVARCHAR (50) NULL,
    [Date]                            DATE          NULL,
    [Pending]                         BIT           NULL,
    [Katalogoppforing]                NVARCHAR (45) NULL,
    [Porteringsdatoog tid]            DATETIME      NULL,
    [Binding]                         BIT           NULL,
    [Postnummer]                      INT           NULL,
    [Antall TrillingSIM]              INT           NULL,
    [allDataSIM]                      INT           NULL,
    [Manuell Top-up]                  BIT           NULL,
    [Sperre Top-up]                   BIT           NULL,
    [Norden]                          BIT           NULL,
    [Tale og SMS til EU]              BIT           NULL,
    [TBN]                             NVARCHAR (15) NULL,
    [HovedSIM]                        INT           NULL,
    [TrillingSIM1]                    INT           NULL,
    [TrillingSIM2]                    INT           NULL,
    [DataSIM1]                        INT           NULL,
    [DataSIM2]                        INT           NULL,
    [DataSIM3]                        INT           NULL,
    [DataSIM4]                        INT           NULL,
    [DataSIM5]                        INT           NULL,
    [DeliveryMethodCode]              NVARCHAR (20) NULL,
    [DeliveryStreetName]              NVARCHAR (20) NULL,
    [DeliveryStreetNumber]            NVARCHAR (10) NULL,
    [DeliveryStreetSuffix]            NVARCHAR (10) NULL,
    [DeliveryCity]                    NVARCHAR (20) NULL,
    [DeliveryZIP]                     NVARCHAR (20) NULL,
    [DeliveryCountryCode]             NVARCHAR (20) NULL,
    [DeliveryContractEmail]           NVARCHAR (20) NULL,
    [DeliveryContractCountryCode]     NVARCHAR (20) NULL,
    [DeliveryContractLocalNumber]     NVARCHAR (20) NULL,
    [DeliveryIndividualFirstName]     NVARCHAR (15) NULL,
    [DeliveryIndividualLastName]      NVARCHAR (20) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Postnummer]...';


GO
CREATE TABLE [dbo].[Postnummer] (
    [ID]            INT            IDENTITY (1, 1) NOT NULL,
    [PostNr]        NVARCHAR (MAX) NULL,
    [Poststed]      NVARCHAR (MAX) NULL,
    [Kommunenummer] NVARCHAR (MAX) NULL,
    [Kommunenavn]   NVARCHAR (MAX) NULL,
    [Kategory]      CHAR (1)       NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating Table [dbo].[Type]...';


GO
CREATE TABLE [dbo].[Type] (
    [Id]             INT           IDENTITY (1, 1) NOT NULL,
    [Name]           NVARCHAR (35) NULL,
    [Reference_code] NVARCHAR (15) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[Client]...';


GO
ALTER TABLE [dbo].[Client] WITH NOCHECK
    ADD FOREIGN KEY ([Id_abonementype]) REFERENCES [dbo].[Abonementype] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[ConnectionType]...';


GO
ALTER TABLE [dbo].[ConnectionType] WITH NOCHECK
    ADD FOREIGN KEY ([Id_abom]) REFERENCES [dbo].[Abonementype] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[ConnectionType]...';


GO
ALTER TABLE [dbo].[ConnectionType] WITH NOCHECK
    ADD FOREIGN KEY ([Id_type]) REFERENCES [dbo].[Type] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_dbo.Client_dbo.Client_Id]...';


GO
ALTER TABLE [dbo].[Fakturaoppsett] WITH NOCHECK
    ADD CONSTRAINT [FK_dbo.Client_dbo.Client_Id] FOREIGN KEY ([Id_client]) REFERENCES [dbo].[Client] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_dbo.Nummer_dbo.Fakturaoppsett_NavnPåKostnadssted]...';


GO
ALTER TABLE [dbo].[Nummer] WITH NOCHECK
    ADD CONSTRAINT [FK_dbo.Nummer_dbo.Fakturaoppsett_NavnPåKostnadssted] FOREIGN KEY ([Kostnadsted]) REFERENCES [dbo].[Fakturaoppsett] ([Kostnadssted]) ON DELETE CASCADE;


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '3612fca1-4f17-4b39-b934-d88c654b39d1')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('3612fca1-4f17-4b39-b934-d88c654b39d1')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c2f7a30c-baad-407f-8bd7-7b012d77f648')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c2f7a30c-baad-407f-8bd7-7b012d77f648')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b197c2cd-7dba-4677-b31a-6305baa47e1e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b197c2cd-7dba-4677-b31a-6305baa47e1e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '75ddc9fd-fe11-4032-bb4a-b135747e2507')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('75ddc9fd-fe11-4032-bb4a-b135747e2507')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Fakturaoppsett] WITH CHECK CHECK CONSTRAINT [FK_dbo.Client_dbo.Client_Id];

ALTER TABLE [dbo].[Nummer] WITH CHECK CHECK CONSTRAINT [FK_dbo.Nummer_dbo.Fakturaoppsett_NavnPåKostnadssted];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.Client'), OBJECT_ID(N'dbo.ConnectionType'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
